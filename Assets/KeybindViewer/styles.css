html{
	--backgroundCol: #171429;
	background-color: var(--backgroundCol);
}

body{
	--margin: 0.5vw;
	margin: var(--margin);
	font-size: 1lvw;
}

#modList{
	padding: 0;
	list-style-type: none;
	width: fit-content;
}

#modList > ul{
	user-select: none;
	width: 100%;
	padding: 10%;
	color: white;
}

#modList > ul.selected{
	font-weight: bold;
}

#keyboard{
	--keyColor: #efdeef;
	--keySectionSpacingMultiplier: 0.4;
	--keySize: calc((100lvw - var(--margin) * 2)/(22 + var(--keySectionSpacingMultiplier) * 2)); /* 100% width divided by (width in regular sized keys, plus spacing distance times amount of spaces */
}

#keyboard > .keyboardRow{
	display: flex;
	height: var(--keySize);
}

#keyboard .topRow {
	margin-bottom: calc(var(--keySize) * var(--keySectionSpacingMultiplier));
}

#keyboard .lastInRow {
	margin-right: calc(var(--keySize) * var(--keySectionSpacingMultiplier));
}

#keyboard > .keyboardRow > .key{
	width: var(--keySize);
	height: var(--keySize);

	--borderCol: black;
	--keyBorderSize: 0.05lvw;
	--currKeyColor: var(--keyColor);
	box-sizing: border-box;
	box-shadow: inset 0 0 0 var(--keyBorderSize) var(--borderCol);
	border-radius: 0.5lvw;
	background-color: var(--keyColor);
	text-align: center;
	align-content: center;
}

#keyboard > .keyboardRow > .keySpacer {
	width: var(--keySize);
	height: var(--keySize);
	z-index: -1;
}

#keyboard > .keyboardRow > .hasKeybind{
	--currKeyColor: #d85a5a !important;
	background-color: var(--currKeyColor) !important;
}

#keyboard > .keyboardRow > .modHovering{
	--currKeyColor: #5a77d8 !important;
	background-color: var(--currKeyColor) !important;
}

#keyboard > .keyboardRow > .empty {
	background-color: rgba(from var(--keyColor) r g b / 0.65);
}

#keyboard > .keyboardRow > .funcSpacer {
	width: calc(var(--keySize) * 2/3) !important;
}

#keyboard > .keyboardRow > .tab {
	width: calc(var(--keySize) * 1.5) !important;
}

#keyboard > .keyboardRow > .ctrl {
	width: calc(var(--keySize) * 1.5) !important;
}

#keyboard > .keyboardRow > .shift {
	width: calc(var(--keySize) * 1.3) !important;
}

#keyboard > .keyboardRow > .back {
	width: calc(var(--keySize) * 2) !important;
}

#keyboard > .keyboardRow > .capsLock {
	width: calc(var(--keySize) * 2) !important;
}

#keyboard > .keyboardRow > .rShift {
	width: calc(var(--keySize) * 2.7) !important;
}

#keyboard > .keyboardRow > .alt {
	width: calc(var(--keySize) * 1.3) !important;
}

#keyboard > .keyboardRow > .numZero {
	width: calc(var(--keySize) * 2) !important;
}

#keyboard > .keyboardRow > .space {
	width: calc(var(--keySize) * 6.4) !important;
}

#keyboard > .keyboardRow > .doubleHeight {
	height: calc(var(--keySize) * 2) !important;
}

#keyboard > .keyboardRow > .enter {
	width: calc(var(--keySize) * 1.5) !important;
	height: calc(var(--keySize) * 2) !important;
	background-color: transparent !important;
	border: 0;
}

#keyboard > .keyboardRow > .enter > .top {
	position: relative;
	background-color: var(--currKeyColor);
	width: calc(var(--keySize) * 1.5);
	height: var(--keySize);

	border-radius: 0.5lvw 0.5lvw 0 0.5lvw;
	box-shadow: inset 0 0 0 var(--keyBorderSize) var(--borderCol);

	text-align: center;
	align-content: center;
}

#keyboard > .keyboardRow > .enter > .bottom {
	position: relative;
	background-color: var(--currKeyColor);
	width: calc(100% - var(--keySize) / 2);
	height: var(--keySize);
	left: calc(var(--keySize) / 2);

	border-radius: 0 0 0.5lvw 0.5lvw;
	box-shadow: inset 0 0 0 var(--keyBorderSize) var(--borderCol);
}

#keyboard > .keyboardRow > .enter > .bottom:after {
	content: "";
	position: absolute;
	top: calc(var(--keySize) * -1 / (2*5));
	left: var(--keyBorderSize);
	width: calc(var(--keySize) - 2 * var(--keyBorderSize));
	height: calc(var(--keySize) / 5);
	background-color: var(--currKeyColor);
}